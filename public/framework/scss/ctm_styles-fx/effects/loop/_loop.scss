$effect-loop: (
  'loopUpDown': (
    0:      ( transform: translateY(calc(var(--effect-offset) * var(--effect-factor) * -1)) ),
    50:     ( transform: translateY(calc(var(--effect-offset) * var(--effect-factor))) ),
    100:    ( transform: translateY(calc(var(--effect-offset) * var(--effect-factor) * -1)) ),
  ),
  'loopLeftRight': (
    0:      ( transform: translateX(calc(var(--effect-offset) * var(--effect-factor) * -1)) ),
    50:     ( transform: translateX(calc(var(--effect-offset) * var(--effect-factor))) ),
    100:    ( transform: translateX(calc(var(--effect-offset) * var(--effect-factor) * -1)) ),
  ),
  'loopInOut': (
    0:      ( transform: scale(calc(var(--effect-scale) + (var(--effect-scale) * (var(--effect-factor) / 10)))) ),
    50:     ( transform: scale(calc(var(--effect-scale) + (var(--effect-scale) * (var(--effect-factor) / 10)) * -1)) ),
    100:    ( transform: scale(calc(var(--effect-scale) + (var(--effect-scale) * (var(--effect-factor) / 10)))) ),
  ),
  'loopRotate': (
    0:      ( transform: rotate(0deg) ),
    100:    ( transform: rotate(360deg) ),
  ),
  'loopRotateReverse': (
    props:  ( animation-name: loopRotate, animation-direction: reverse)
  ),
  'loopCircle': (
    0:      ( transform: rotate(0deg) translateX(var(--effect-offset)) rotate(0deg) ),
    100:    ( transform: rotate(360deg) translateX(var(--effect-offset)) rotate(-360deg) ),
  )
);

@each $name, $map in $effect-loop {
  .#{$-effect-prefix}#{$name} {
    @include ctm-animation($name, $map);
  }
}
